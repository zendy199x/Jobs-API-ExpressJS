openapi: 3.0.0
info:
  title: Jobs API
  description: https://github.com/zendy199x/Jobs-App-MERN
  contact:
    name: Zendy
    url: https://github.com/zendy199x/Jobs-App-MERN
    email: nguyenduc.051194@gmail.com
  version: "1.0"
servers:
  - url: http://example.com
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisteruserRequest"
                - example:
                    name: Zendy
                    email: zendy123456@gmail.com
                    password: Ducnhi@123456
            example:
              name: Zendy
              email: zendy123456@gmail.com
              password: Ducnhi@123456
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login
      operationId: Login
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginRequest"
                - example:
                    email: zendy123456@gmail.com
                    password: Ducnhi@123456
            example:
              email: zendy123456@gmail.com
              password: Ducnhi@123456
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create job
      operationId: Createjob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreatejobRequest"
                - example:
                    company: Golden owl company
                    position: Developer
                    wage: 500
                    rating: 5
                    status: interview
            example:
              company: Golden owl company
              position: Developer
              wage: 500
              rating: 5
              status: interview
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/63d21c8a926bbcd758f34c42:
    get:
      tags:
        - Jobs
      summary: Get job
      operationId: Getjob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdatejobRequest"
                - example:
                    company: Golden owl
                    position: Developer
            example:
              company: Golden owl
              position: Developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Zendy
        email: zendy123456@gmail.com
        password: Ducnhi@123456
    LoginRequest:
      title: LoginRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: zendy123456@gmail.com
        password: Ducnhi@123456
    CreatejobRequest:
      title: CreatejobRequest
      required:
        - company
        - position
        - wage
        - rating
        - status
      type: object
      properties:
        company:
          type: string
        position:
          type: string
        wage:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        status:
          type: string
      example:
        company: Golden owl company
        position: Developer
        wage: 500
        rating: 5
        status: interview
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Golden owl
        position: Developer
    DeletejobRequest:
      title: DeletejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Golden owl
        position: Developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
  - name: Jobs
